trigger:
- master

pr: none

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureMysqlDeployment@1
      displayName: 'Execute Azure MySQL : InlineSqlTask'
      inputs:
        ConnectedServiceName: $(azureSubscriptionEndpoint)
        ServerName: $(ServerName)
        DatabaseName: $(DataBaseName)
        SqlUsername: $(SqlUserName)
        SqlPassword: $(SqlPassword)
        TaskNameSelector: InlineSqlTask
        SqlInline: CREATE DATABASE IF NOT EXISTS testDb;
    - task: Gradle@2
      displayName: Build and test cloud-server
      inputs:
        cwd: 'cloud-server'
        gradleWrapperFile: 'cloud-server/gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build test'
    
    - task: Gradle@2
      displayName: Build and test machine-client
      inputs:
        cwd: 'machine-to-machine-client'
        gradleWrapperFile: 'machine-to-machine-client/gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'

    - task: Docker@2
      displayName: Build and push an image to container registry for cloud-server
      inputs:
        command: buildAndPush
        containerRegistry: $(azureContainerConnection)
        repository: $(cloudServerRepository)
        dockerfile: 'cloud-server/Dockerfile'
        tags: |
          $(Build.SourceVersion)
    
    - task: Docker@2
      displayName: Build and push an image to container registry for machine-client
      inputs:
        command: buildAndPush
        containerRegistry: $(azureContainerConnection)
        repository: $(machineClientRepository)
        dockerfile: 'machine-to-machine-client/Dockerfile'
        tags: |
          $(Build.SourceVersion)
    
    - task: Docker@2
      displayName: Build and push an image to container registry for web-app-client
      inputs:
        command: buildAndPush
        containerRegistry: $(azureContainerConnection)
        repository: $(webappClientRepository)
        dockerfile: 'webapp-client/Dockerfile'
        tags: |
          $(Build.SourceVersion)

- stage: Deploy
  jobs:
  - job: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureWebAppContainer@1
      displayName: Azure Web App on Container Deploy
      inputs:
        appName: $(cloudServerApp)
        azureSubscription: $(azureSubscriptionEndpoint)
        imageName: $(azureContainerRegistry)/$(cloudServerRepository):$(Build.SourceVersion)
    
    - task: AzureWebAppContainer@1
      displayName: Azure Web App on Container Deploy
      inputs:
        appName: $(machineClientApp)
        azureSubscription: $(azureSubscriptionEndpoint)
        imageName: $(azureContainerRegistry)/$(machineClientRepository):$(Build.SourceVersion)
    
    - task: AzureWebAppContainer@1
      displayName: Azure Web App on Container Deploy
      inputs:
        appName: $(webAppClient)
        azureSubscription: $(azureSubscriptionEndpoint)
        imageName: $(azureContainerRegistry)/$(webappClientRepository):$(Build.SourceVersion)