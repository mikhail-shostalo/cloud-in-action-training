version: "3.4"

services:

  db-server:
    image: mysql:5.7
    container_name: db-server-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=shop
      - MYSQL_USER=rootuser
      - MYSQL_PASSWORD=rootuserpassword
    ports:
      - 3305:3306
    restart: always
    networks:
      - backend

  server:
    build: cloud-server
    image: app/cloud-server
    ports: 
      - 80:80
    depends_on:
      - db-server
    restart: always
    environment:
      spring.datasource.url: jdbc:mysql://db-server-mysql:3306/shop?createDatabaseIfNotExist=true
      spring.datasource.username: rootuser
      spring.datasource.password: rootuserpassword
      allowed.origins: http://localhost:82
    networks:
      - backend
  
  client-machine:
    build: machine-to-machine-client
    image: app/machine-to-machine-client
    environment:
      cloud-server.base-url: http://host.docker.internal/
    ports:
      - 81:80
    networks:
      - backend

  webapp-client:
    build: webapp-client
    image: app/webapp-client
    ports:
      - 82:80
    environment:
      SERVER_API_URL: http://localhost
      CLIENT_ID: d6a95055-bacb-4dce-b1cf-71bcf1de8d16
      AUTHORITY_URL: https://login.microsoftonline.com/f1faa832-4181-4713-8eee-9b29f2eec606/
      REDIRECT_URL: http://localhost:82/
      APP_SOCPES: api://d6a95055-bacb-4dce-b1cf-71bcf1de8d16/User.Write
    networks:
      - backend

networks:
  backend:
    driver: "bridge"